mod keccak;
use keccak::Keccak;
// use std::io::prelude::*;
use tokio::prelude::*;

const SEED: [u8; 64] = [
    0xf8, 0x50, 0xef, 0x94, 0xa1, 0x3e, 0xea, 0x86, 0x19, 0x52, 0x33, 0x96, 0x7a, 0x63, 0xdd, 0x9a, 0x7c, 0x6c, 0x46, 0x6a, 0x1a, 0x4d, 0x83, 0xda, 0x73, 0x72, 0x99, 0x8a, 0xfe, 0xbb, 0x65, 0xf8, 0x8f, 0xa6, 0x85, 0x3f, 0xb8, 0x9e, 0x1e, 0x82, 0x44, 0x72, 0x55, 0xb9, 0x83, 0xf1, 0x80, 0xb7, 0x80, 0xd4, 0x9a, 0xa2, 0xa7, 0x9f, 0xa8, 0xff, 0x1b, 0x5d, 0xdf, 0xe6, 0xdc, 0xef, 0xeb, 0x4d
];

#[tokio::main]
async fn main() {
    let mut keccak = Keccak::new();
    for _i in 0..1000000 {
        keccak.clear();
        keccak.absorb_bits(1088, &SEED.to_vec(), 0b10, 2);
        keccak.squeeze(1088, 256 / 8);
    }
    /*
    keccak.absorb(512, &SEED.to_vec());
    let mut stdout = tokio::io::stdout();
    loop {
        stdout.write_all(&keccak.squeeze(512, 4096)).await.unwrap();
    }
    */
}
